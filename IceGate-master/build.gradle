plugins {
	id 'org.springframework.boot' version '2.2.6.RELEASE'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
	id 'java'
}

group = 'com.icegate'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
	developmentOnly
	runtimeClasspath {
		extendsFrom developmentOnly
	}
}

repositories {
	mavenCentral()
	  maven {
    	url "https://git.captcha.com/botdetect-java-captcha.git/blob_plain/HEAD:/"
  		}
}

ext {
	set('springCloudVersion', "Hoxton.SR3")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.cloud:spring-cloud-starter-config'
	implementation 'org.springframework.cloud:spring-cloud-starter-bus-amqp'
	compile 'com.captcha:botdetect-servlet:4.0.beta3.7'
//	compile group: 'com.googlecode.json-simple', name: 'json-simple', version: '1.1.1'
	compile group: 'org.json', name: 'json', version: '20190722'
	compile group: 'org.springframework.boot', name: 'spring-boot-starter-aop', version: '2.2.6.RELEASE'
	compile group: 'org.webjars', name: 'jquery', version: '3.3.1'
	compile('org.springframework.boot:spring-boot-starter-web','org.apache.tomcat.embed:tomcat-embed-jasper'
	,'javax.servlet:jstl')
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly('mysql:mysql-connector-java')
//	testImplementation('org.springframework.boot:spring-boot-starter-test') {
	//	exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	//}
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

test {
	useJUnitPlatform()
}
